version: '3'

networks:
  frontend:
    driver: ${NETWORKS_DRIVER}
  backend:
    driver: ${NETWORKS_DRIVER}

volumes:
  mysql:
    driver: ${VOLUMES_DRIVER}
  redis:
    driver: ${VOLUMES_DRIVER}
  mongo:
    driver: ${VOLUMES_DRIVER}
  elasticsearch:
    driver: ${VOLUMES_DRIVER}

services:

## php-fpm #######################################
    php-fpm:
      build:
        context: ./php-fpm
      container_name: PHP-FPM
      volumes:
        - ./php-fpm/php.ini:/usr/local/etc/php/php.ini
        - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}
      ports:
        - "${FPM_PORT}:9000"
      networks:
        - backend
## workspace #######################################
    workspace:
      build:
        context: ./workspace
      container_name: Workspace
      volumes:
        - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}
      ports:
        - "${SSH_PORT}:22"
      tty: true
      networks:
        - frontend
        - backend

## NGINX Server #########################################
    nginx:
      build:
        context: ./nginx
        args:
          - PHP_UPSTREAM_CONTAINER=${NGINX_PHP_UPSTREAM_CONTAINER}
          - PHP_UPSTREAM_PORT=${NGINX_PHP_UPSTREAM_PORT}
      container_name: Nginx
      volumes:
        - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}
        - ${NGINX_HOST_LOG_PATH}:/var/log/nginx
        - ${NGINX_SITES_PATH}:/etc/nginx/sites-available
      ports:
        - "${NGINX_HOST_HTTP_PORT}:80"
      depends_on:
        - php-fpm
      networks:
        frontend:
        backend:
          aliases:
            - api.parallel.test
            - web.parallel.test

## MySQL ################################################
    mysql:
      build:
        context: ./mysql
      container_name: MySQL
      environment:
        - MYSQL_DATABASE=${MYSQL_DATABASE}
        - MYSQL_USER=${MYSQL_USER}
        - MYSQL_PASSWORD=${MYSQL_PASSWORD}
        - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      volumes:
        - ${DATA_PATH_HOST}/mysql:/var/lib/mysql
        - ${MYSQL_ENTRYPOINT_INITDB}:/docker-entrypoint-initdb.d
      ports:
        - "${MYSQL_PORT}:3306"
      networks:
        - backend

## MongoDB ##############################################
    mongo:
      build: ./mongo
      container_name: Mongod
      ports:
        - "${MONGODB_PORT}:27017"
      volumes:
        - ${DATA_PATH_HOST}/mongo:/data/db
      networks:
        - backend

## Redis ################################################
    redis:
      build: ./redis
      container_name: Redis
      volumes:
        - ${DATA_PATH_HOST}/redis:/data
      ports:
        - "${REDIS_PORT}:6379"
      networks:
        - backend

## ElasticSearch ########################################
    elasticsearch:
      build: ./elasticsearch
      container_name: Elasticsearch
      volumes:
        - elasticsearch:/usr/share/elasticsearch/data
      environment:
        - cluster.name=parallel-cluster
        - bootstrap.memory_lock=true
        - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      ulimits:
        memlock:
          soft: -1
          hard: -1
      ports:
        - "${ELASTICSEARCH_HOST_HTTP_PORT}:9200"
        - "${ELASTICSEARCH_HOST_TRANSPORT_PORT}:9300"
      depends_on:
        - php-fpm
      networks:
        - frontend
        - backend

## api #######################################
    api:
      build:
        context: ./api
      container_name: Api
      volumes:
        - ${API_CODE_PATH_HOST}:${API_CODE_PATH_CONTAINER}
      links:
        - redis
        - mongo
      ports:
        - "${API_PORT}:8085"
      depends_on:
        - redis
      networks:
        frontend:
        backend:
          aliases:
            - api.parallel.test
        
## member #######################################
    member:
      build:
        context: ./member
      container_name: Member
      volumes:
        - ${MEMBER_CODE_PATH_HOST}:${MEMBER_CODE_PATH_CONTAINER}
      links:
        - redis
      ports:
        - "${MEMBER_PORT}:1337"
      depends_on:
        - redis
      networks:
        frontend:
        backend:
          aliases:
            - member.parallel.test
        
## portal #######################################
    portal:
      build:
        context: ./portal
      container_name: Portal
      volumes:
        - ${PORTAL_CODE_PATH_HOST}:${PORTAL_CODE_PATH_CONTAINER}
      links:
        - redis
      ports:
        - "${PORTAL_PORT}:1338"
      depends_on:
        - redis
      networks:
        frontend:
        backend:
          aliases:
            - portal.parallel.test

 ## consult #######################################
    consult:
      build:
        context: ./consult
      container_name: Consult
      volumes:
        - ${CONSULT_CODE_PATH_HOST}:${CONSULT_CODE_PATH_CONTAINER}
      links:
        - redis
      ports:
        - "${CONSULT_PORT}:8088"
      depends_on:
        - redis
        - api
      networks:
        frontend:
        backend:
          aliases:
            - consult.parallel.test 
